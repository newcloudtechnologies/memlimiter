name: CI

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.

      - uses: actions/setup-go@v3

      - name: SWAP
        run: swapon -s

      - name: Verify dependencies
        run: go mod verify

      - name: Build
        run: make build

      - name: Test
        run: |
          go test -v ./... -covermode=count -coverprofile=coverage.out
          go tool cover -func=coverage.out -o=coverage.out

      - name: check
        run: |
          echo $GOPATH
          pwd
          ll .

      - name: Go Coverage Badge  # Pass the `coverage.out` output to this action
        uses: tj-actions/coverage-badge-go@v1.2
        with:
          filename: coverage.out

      - name: Verify changed files
        uses: tj-actions/verify-changed-files@v9.1
        id: verify-changed-files
        with:
          files: README.md

      - name: Commit changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "chore: Updated coverage badge."

      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ github.token }}
          branch: ${{ github.head_ref }}

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.42.1
          args: -c .golangci.yml --timeout=10m
          skip-pkg-cache: true
          skip-build-cache: true
